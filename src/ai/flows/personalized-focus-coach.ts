// This is an AI-powered code generated by Firebase Studio.
'use server';

/**
 * @fileOverview A personalized focus coach AI agent.
 *
 * - personalizedFocusCoach - A function that provides personalized feedback and suggestions on focus habits.
 * - PersonalizedFocusCoachInput - The input type for the personalizedFocusCoach function.
 * - PersonalizedFocusCoachOutput - The return type for the personalizedFocusCoach function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PersonalizedFocusCoachInputSchema = z.object({
  focusSessionHistory: z
    .string()
    .describe(
      'A string containing the history of the user focus sessions, including duration, interruptions, and self-reported focus levels.'
    ),
  userPreferences: z
    .string()
    .describe(
      'A string containing the user preferences for focus sessions, including preferred time of day, environment, and music.'
    ),
});
export type PersonalizedFocusCoachInput = z.infer<typeof PersonalizedFocusCoachInputSchema>;

const PersonalizedFocusCoachOutputSchema = z.object({
  feedback: z
    .string()
    .describe(
      'Personalized feedback on the user focus habits, including strengths and weaknesses.'
    ),
  suggestions: z
    .string()
    .describe(
      'Personalized suggestions on how to improve focus sessions, including tips on time management, environment optimization, and relaxation techniques.'
    ),
});
export type PersonalizedFocusCoachOutput = z.infer<typeof PersonalizedFocusCoachOutputSchema>;

export async function personalizedFocusCoach(
  input: PersonalizedFocusCoachInput
): Promise<PersonalizedFocusCoachOutput> {
  return personalizedFocusCoachFlow(input);
}

const prompt = ai.definePrompt({
  name: 'personalizedFocusCoachPrompt',
  input: {schema: PersonalizedFocusCoachInputSchema},
  output: {schema: PersonalizedFocusCoachOutputSchema},
  prompt: `You are a personalized focus coach. You analyze user focus session history and preferences to provide personalized feedback and suggestions on how to improve their deep work sessions and overall productivity.

Analyze the following information about the user:

Focus Session History: {{{focusSessionHistory}}}
User Preferences: {{{userPreferences}}}

Based on this information, provide personalized feedback and suggestions to the user.

Feedback:
Suggestions: `,
});

const personalizedFocusCoachFlow = ai.defineFlow(
  {
    name: 'personalizedFocusCoachFlow',
    inputSchema: PersonalizedFocusCoachInputSchema,
    outputSchema: PersonalizedFocusCoachOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

